////  apply plugin: 'com.android.application'
////  apply plugin: 'com.google.gms.google-services'
////  apply plugin: 'kotlin-android'
////  apply plugin: 'dev.flutter.flutter-gradle-plugin'
//
//
//
//// plugins {
////     id "com.android.application"
////     id "kotlin-android"
////     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
////     id "dev.flutter.flutter-gradle-plugin"
//
////     // Add the Google services Gradle plugin
////     id 'com.google.gms.google-services'
//
////   ...
//// }
//
//// def localProperties = new Properties()
//// def localPropertiesFile = rootProject.file("local.properties")
//// if (localPropertiesFile.exists()) {
////     localPropertiesFile.withReader("UTF-8") { reader ->
////         localProperties.load(reader)
////     }
//// }
//
//// def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
//// if (flutterVersionCode == null) {
////     flutterVersionCode = "1"
//// }
//
//// def flutterVersionName = localProperties.getProperty("flutter.versionName")
//// if (flutterVersionName == null) {
////     flutterVersionName = "1.0"
//// }
//
//// android {
////     namespace = "com.example.student_management"
////     compileSdk = flutter.compileSdkVersion
////     ndkVersion = flutter.ndkVersion
//
////     compileOptions {
////         sourceCompatibility = JavaVersion.VERSION_1_8
////         targetCompatibility = JavaVersion.VERSION_1_8
////     }
//
////     defaultConfig {
////         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
////         applicationId = "com.example.student_management"
////         // You can update the following values to match your application needs.
////         // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
////         minSdk = flutter.minSdkVersion
////         minSdkVersion 23
//
////         targetSdk = flutter.targetSdkVersion
////         versionCode = flutterVersionCode.toInteger()
////         versionName = flutterVersionName
////     }
//
////     buildTypes {
////         release {
////             // TODO: Add your own signing config for the release build.
////             // Signing with the debug keys for now, so `flutter run --release` works.
////             signingConfig = signingConfigs.debug
////         }
////     }
//// }
//
//// dependencies {
//// implementation 'com.google.firebase:firebase-bom' // Bill of Materials for Firebase Android libraries
//// implementation 'com.google.firebase:firebase-auth' // Latest version fetched through BOM
//// implementation 'com.google.firebase:firebase-firestore' // Latest version fetched through BOM
//// implementation 'com.google.firebase:firebase-storage' // Latest version fetched through BOM}
//// }
//// flutter {
////     source = "../.."
//// }
//
//// dependencies {
////   // Import the Firebase BoM
////   implementation platform('com.google.firebase:firebase-bom:33.0.0')
//
//
////   // TODO: Add the dependencies for Firebase products you want to use
////   // When using the BoM, don't specify versions in Firebase dependencies
////   implementation 'com.google.firebase:firebase-analytics'
//
//
////   // Add the dependencies for any other desired Firebase products
////   // https://firebase.google.com/docs/android/setup#available-libraries
//// }
//
//
///*plugins {
//    id 'com.android.application'
//    id 'kotlin-android'
//    id 'dev.flutter.flutter-gradle-plugin'
//    id 'com.google.gms.google-services' // Add the Google services Gradle plugin
//}
//
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file("local.properties")
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader("UTF-8") { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
//def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"
//
//android {
//    namespace = "com.example.student_management"
//    compileSdk = flutter.compileSdkVersion
//    ndkVersion = flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility = JavaVersion.VERSION_1_8
//        targetCompatibility = JavaVersion.VERSION_1_8
//    }
//
//    defaultConfig {
//        applicationId = "com.example.student_management"
//        minSdk = flutter.minSdkVersion
//         minSdkVersion 23
//        targetSdk = flutter.targetSdkVersion
//        versionCode = flutterVersionCode.toInteger()
//        versionName = flutterVersionName
//    }
//
//    buildTypes {
//        release {
//            signingConfig = signingConfigs.debug // TODO: Add your own signing config for the release build.
//        }
//    }
//}
//
//dependencies {
//    // Import the Firebase BoM
//    implementation platform('com.google.firebase:firebase-bom:33.0.0')
//
//    // Add the dependencies for Firebase products you want to use
//    implementation 'com.google.firebase:firebase-analytics'
//    implementation 'com.google.firebase:firebase-auth'
//    implementation 'com.google.firebase:firebase-firestore'
//    implementation 'com.google.firebase:firebase-storage'
//
//    // Other dependencies
//    implementation 'org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version'
//}
//
//flutter {
//    source = "../.."
//}
//
//// Apply the Google services Gradle plugin
//apply plugin: 'com.google.gms.google-services'
//*/
//
//
//// apply plugin: 'com.android.application'
//// apply plugin: 'kotlin-android'
//// apply plugin: 'com.google.gms.google-services'
//
//// android {
////     namespace = "com.example.student_management"
//// compileSdk = 34
//
////     defaultConfig {
////         manifestPlaceholders = [applicationName: "com.example.student_management.MyApplication"]
//
////         applicationId = "com.example.student_management"
////         minSdkVersion 23
////         targetSdkVersion 34
////         versionCode 1
////         versionName "1.0"
////     }
//
////     buildTypes {
////         release {
////             minifyEnabled false
////             proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
////         }
////     }
//// }
//
////dependencies {
////    // Import the Firebase BoM
////    implementation platform('com.google.firebase:firebase-bom:33.0.0')
////
////
////    // Add the dependencies for Firebase products you want to use
////    implementation 'com.google.firebase:firebase-analytics'
////    implementation 'com.google.firebase:firebase-auth'
////    implementation 'com.google.firebase:firebase-firestore'
////    implementation 'com.google.firebase:firebase-storage'
////
////    // Other dependencies
////    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
////}
//
//// Add this line at the end of the file
//
//// dependencies {
////     // Add these lines
////     implementation platform('com.google.firebase:firebase-bom:33.0.0') // Use the latest version
////     implementation 'com.google.firebase:firebase-analytics'
////     implementation 'com.google.firebase:firebase-auth'
////     implementation 'com.google.firebase:firebase-firestore'
//// }
//// apply plugin: 'com.google.gms.google-services'
//
//
//
//
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader('UTF-8') { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterRoot = localProperties.getProperty('flutter.sdk')
//if (flutterRoot == null) {
//    throw GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
//}
//
//def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
//if (flutterVersionCode == null) {
//    flutterVersionCode = '9'
//}
//
//def flutterVersionName = localProperties.getProperty('flutter.versionName')
//if (flutterVersionName == null) {
//    flutterVersionName = '1.9'
//}
////apply plugin: 'com.android.application'
////apply plugin: 'kotlin-android'
////apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
////apply plugin: 'com.google.gms.google-services'
//
////apply plugin: 'com.android.application'
////apply plugin: 'com.google.gms.google-services'
////apply plugin: 'kotlin-android'
////apply plugin: 'dev.flutter.flutter-gradle-plugin'
//def keystoreProperties = new Properties()
//    def keystorePropertiesFile = rootProject.file('key.properties')
//    if (keystorePropertiesFile.exists()) {
//       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
//    }
//
//android {
//    namespace "com.example.student_management"
//    compileSdkVersion 34
//    ndkVersion flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//
//    kotlinOptions {
//        jvmTarget = '1.8'
//    }
//
//    sourceSets {
//        main.java.srcDirs += 'src/main/kotlin'
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId "com.example.student_management"
//        // You can update the following values to match your application needs.
//        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//        minSdkVersion 24
//        targetSdkVersion flutter.targetSdkVersion
//        versionCode flutterVersionCode.toInteger()
//        versionName flutterVersionName
//        multiDexEnabled true
//    }
//
////     packagingOptions {
////         pickFirst 'lib/x86/libc++_shared.so'
////         pickFirst 'lib/x86_64/libc++_shared.so'
////         pickFirst 'lib/armeabi-v7a/libc++_shared.so'
////         pickFirst 'lib/arm64-v8a/libc++_shared.so'
////     }
//
////     signingConfigs {
////        release {
////            keyAlias keystoreProperties['keyAlias']
////            keyPassword keystoreProperties['keyPassword']
////            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
////            storePassword keystoreProperties['storePassword']
////        }
////    }
////    buildTypes {
////        release {
////            signingConfig signingConfigs.debug
////        }
////    }
//
//    android {
//   // yout existing code
////    packagingOptions {
////         pickFirst '**/libc++_shared.so'
////         pickFirst '**/libfbjni.so'
////     }
//}
//}
//
//flutter {
//    source '../..'
//}
//
//dependencies {
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation(platform("com.google.firebase:firebase-bom:33.1.0"))
//    implementation 'com.google.firebase:firebase-analytics'
//    implementation "androidx.multidex:multidex:2.0.1"
//  // Add the dependency for the Firebase SDK for Google Analytics
//  //implementation("com.google.firebase:firebase-analytics")
//
//
//}


plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'dev.flutter.flutter-gradle-plugin'
    id 'com.google.gms.google-services' // Apply the Google services Gradle plugin
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "com.example.student_management"
    compileSdkVersion 34 // Update this with your target Android version
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.student_management"  // Replace with your unique application ID
        minSdkVersion 24 // Update this with your minimum supported Android version
        targetSdkVersion flutter.targetSdkVersion
        versionCode 1 // (Assuming you have a mechanism to set this)
        versionName "1.0.0" // (Assuming you have a mechanism to set this)
        multiDexEnabled true
    }

    // Optional signing configuration for release builds
    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            } else {
                // Use a debug keystore for now (replace with your release keystore configuration)
                storeFile file(/E:\Flutter Projects\u0009ask\student_management\android\app\app-debug.keystore/)
            }
        }
    }

    buildTypes {
        release {
            // Enable signing if you have a release keystore configured above
            signingConfig signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android {
        // Your existing code here (if applicable)

        packagingOptions {
            // Consider adding specific library-related packaging options if needed
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform("com.google.firebase:firebase-bom:33.1.0")  // Update with the latest Firebase BoM version
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-analytics'
    implementation "androidx.multidex:multidex:2.0.1"

}
